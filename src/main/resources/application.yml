spring:
  servlet:
    multipart:
      # 2024MBでアップロードできるファイルと要請のサイズを制限する
      max-file-size: 2048MB
      max-request-size: 2048MB

  # DataBaseは実行を簡単にするためにH2を使う
  datasource:
    url: jdbc:h2:mem:file
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:test}
    driver-class-name: org.h2.Driver

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      # プログラムを実行するときEntityと実際のDataBaseのテーブルを比べる
      ddl-auto: update
    open-in-view: false # 性能のためにopen-in-viewをfalseで設定する
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true

  logging:
    config: classpath:logback-spring.xml

# JWTの設定
jwt:
  # JWTの秘密キーを環境変数で注入される
  secret: ${JWT_SECRET_KEY:zrGwAiwkl9jUN4aIxXa8KluPljl9eX0qKfpTgYT1OKIlZLOIf5L0jPSN9pjc0sJ1d5r1xGJCuLJu6u8K2BlSKTNhY7liEgbGCJnz10y3Z3IItlsO0pJjIhPTgMvQ95Iki2oVx4fbBMY6fBD33WungyCmcOYsBdk1IAABl1qn6E6LgmEJoOv8Z83SRb3PmlCO}
  expire:
    # 5分 (1000 * 60 * 5 = 300000) / 30分 (1000 * 60 * 30 = 1800000) / 1時間 (1000 * 60 * 60 = 3600000)
    access: ${JWT_EXPIRE_TIME:1800000}

server:
  forward-headers-strategy: native # HttpServletRequest.getRemoteAddr()を使ってX-Forwarded-For Header情報をもらうために使う
  servlet:
    context-path: /dau/api

service:
  init-user:
    id: test-user
    pw: test-password
  allowed-ips: ${ALLOWED_IPS:192.168.192.192, 127.0.0.1, 0:0:0:0:0:0:0:1} # 要請ができるIPを環境変数で注入される ex: 197.0.10. , 197.0.10.24
  rate-limit:
    init-bucket-size: ${RATE_LIMIT_BUCKET_SIZE:1000}
    refill-second: ${RATE_LIMIT_REFILL_SECOND:60}
    refill-token: ${RATE_LIMIT_REFILL_TOKEN:1000}
  file-write-scheduler:
    cron: 0 0 * * * *
    file-directory: ${WRITE_FILE_DIRECTORY:/home/sky114z/private-study/FileService.Servser/files}
    extension-delimiter: ${WRITE_FILE_EXTENSION_DELIMITER:csv, txt|}
